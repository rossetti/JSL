/*
 * This file is generated by jOOQ.
 */
package jslx.dbutilities.jsldbsrc.tables.records;


import jslx.dbutilities.jsldbsrc.tables.ModelElement;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelElementRecord extends UpdatableRecordImpl<ModelElementRecord> implements Record8<Integer, Integer, String, String, Integer, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.SIM_RUN_ID_FK</code>.
     */
    public void setSimRunIdFk(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.SIM_RUN_ID_FK</code>.
     */
    public Integer getSimRunIdFk() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.ELEMENT_ID</code>.
     */
    public void setElementId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.ELEMENT_ID</code>.
     */
    public Integer getElementId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.ELEMENT_NAME</code>.
     */
    public void setElementName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.ELEMENT_NAME</code>.
     */
    public String getElementName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.CLASS_NAME</code>.
     */
    public void setClassName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.CLASS_NAME</code>.
     */
    public String getClassName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.PARENT_ID_FK</code>.
     */
    public void setParentIdFk(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.PARENT_ID_FK</code>.
     */
    public Integer getParentIdFk() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.PARENT_NAME</code>.
     */
    public void setParentName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.PARENT_NAME</code>.
     */
    public String getParentName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.LEFT_COUNT</code>.
     */
    public void setLeftCount(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.LEFT_COUNT</code>.
     */
    public Integer getLeftCount() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>JSL_DB.MODEL_ELEMENT.RIGHT_COUNT</code>.
     */
    public void setRightCount(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>JSL_DB.MODEL_ELEMENT.RIGHT_COUNT</code>.
     */
    public Integer getRightCount() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, Integer, String, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, String, String, Integer, String, Integer, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ModelElement.MODEL_ELEMENT.SIM_RUN_ID_FK;
    }

    @Override
    public Field<Integer> field2() {
        return ModelElement.MODEL_ELEMENT.ELEMENT_ID;
    }

    @Override
    public Field<String> field3() {
        return ModelElement.MODEL_ELEMENT.ELEMENT_NAME;
    }

    @Override
    public Field<String> field4() {
        return ModelElement.MODEL_ELEMENT.CLASS_NAME;
    }

    @Override
    public Field<Integer> field5() {
        return ModelElement.MODEL_ELEMENT.PARENT_ID_FK;
    }

    @Override
    public Field<String> field6() {
        return ModelElement.MODEL_ELEMENT.PARENT_NAME;
    }

    @Override
    public Field<Integer> field7() {
        return ModelElement.MODEL_ELEMENT.LEFT_COUNT;
    }

    @Override
    public Field<Integer> field8() {
        return ModelElement.MODEL_ELEMENT.RIGHT_COUNT;
    }

    @Override
    public Integer component1() {
        return getSimRunIdFk();
    }

    @Override
    public Integer component2() {
        return getElementId();
    }

    @Override
    public String component3() {
        return getElementName();
    }

    @Override
    public String component4() {
        return getClassName();
    }

    @Override
    public Integer component5() {
        return getParentIdFk();
    }

    @Override
    public String component6() {
        return getParentName();
    }

    @Override
    public Integer component7() {
        return getLeftCount();
    }

    @Override
    public Integer component8() {
        return getRightCount();
    }

    @Override
    public Integer value1() {
        return getSimRunIdFk();
    }

    @Override
    public Integer value2() {
        return getElementId();
    }

    @Override
    public String value3() {
        return getElementName();
    }

    @Override
    public String value4() {
        return getClassName();
    }

    @Override
    public Integer value5() {
        return getParentIdFk();
    }

    @Override
    public String value6() {
        return getParentName();
    }

    @Override
    public Integer value7() {
        return getLeftCount();
    }

    @Override
    public Integer value8() {
        return getRightCount();
    }

    @Override
    public ModelElementRecord value1(Integer value) {
        setSimRunIdFk(value);
        return this;
    }

    @Override
    public ModelElementRecord value2(Integer value) {
        setElementId(value);
        return this;
    }

    @Override
    public ModelElementRecord value3(String value) {
        setElementName(value);
        return this;
    }

    @Override
    public ModelElementRecord value4(String value) {
        setClassName(value);
        return this;
    }

    @Override
    public ModelElementRecord value5(Integer value) {
        setParentIdFk(value);
        return this;
    }

    @Override
    public ModelElementRecord value6(String value) {
        setParentName(value);
        return this;
    }

    @Override
    public ModelElementRecord value7(Integer value) {
        setLeftCount(value);
        return this;
    }

    @Override
    public ModelElementRecord value8(Integer value) {
        setRightCount(value);
        return this;
    }

    @Override
    public ModelElementRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5, String value6, Integer value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModelElementRecord
     */
    public ModelElementRecord() {
        super(ModelElement.MODEL_ELEMENT);
    }

    /**
     * Create a detached, initialised ModelElementRecord
     */
    public ModelElementRecord(Integer simRunIdFk, Integer elementId, String elementName, String className, Integer parentIdFk, String parentName, Integer leftCount, Integer rightCount) {
        super(ModelElement.MODEL_ELEMENT);

        setSimRunIdFk(simRunIdFk);
        setElementId(elementId);
        setElementName(elementName);
        setClassName(className);
        setParentIdFk(parentIdFk);
        setParentName(parentName);
        setLeftCount(leftCount);
        setRightCount(rightCount);
    }
}
